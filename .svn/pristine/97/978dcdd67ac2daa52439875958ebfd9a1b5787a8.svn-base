<template>
<div class="paramsList">
        <div class="EERsort">
            <el-tabs   v-model="activeName" @tab-click="drawParam" >
                <el-tab-pane label="各参数单独排序" name="first"></el-tab-pane>
                <el-tab-pane label="按EER排序" name="second">
                    <el-button type="primary"  v-on:click="changeEERsort()">换顺序</el-button>
                </el-tab-pane>
            </el-tabs>
        </div>
        <div class="selectSort" v-if="activeName=='first'">
         <select @change=drawParam v-model="selected0" >         
             <option v-for="option in options0" v-bind:value="option.value">
             {{option.text}}
             </option>   
         </select>
         <select @change=drawParam v-model="selected1">         
             <option v-for="option in options1" v-bind:value="option.value">
             {{option.text}}
             </option>   
         </select>
         <select @change=drawParam v-model="selected2">         
             <option v-for="option in options2" v-bind:value="option.value">
             {{option.text}}
             </option>   
         </select>
         <select @change=drawParam v-model="selected3">         
             <option v-for="option in options3" v-bind:value="option.value">
             {{option.text}}
             </option>   
         </select>
         <select @change=drawParam v-model="selected4">         
             <option v-for="option in options4" v-bind:value="option.value">
             {{option.text}}
             </option>   
         </select>
         <select @change=drawParam v-model="selected5">         
             <option v-for="option in options5" v-bind:value="option.value">
             {{option.text}}
             </option>   
         </select>
     </div>
     <div class="clear"></div>
     <div id="myChartparam"></div>
</div>
</template>

<script>
export default {
  data () {
    return {
     dataOrigin:{

     },
     dataProjects:{

     },
     activeName:'first',
     dataOrigin_2:{
     },
     selected0:'0',
     options0:[
       {text:'降序',value:'0'},
       {text:'升序',value:'1'}
     ],
     
     selected1:'0',
     options1:[
       {text:'降序',value:'0'},
       {text:'升序',value:'1'}
     ],
     
     selected2:'0',
     options2:[
       {text:'降序',value:'0'},
       {text:'升序',value:'1'}
     ],
     
     selected3:'0',
     options3:[
       {text:'降序',value:'0'},
       {text:'升序',value:'1'}
     ],
     
     selected4:'0',
     options4:[
       {text:'降序',value:'0'},
       {text:'升序',value:'1'}
     ],
     
     selected5:'0',
     options5:[
       {text:'降序',value:'0'},
       {text:'升序',value:'1'}
     ]
    }
  },
  mounted(){
    this.getParams();
  },
  methods:{
  getParams(){
      var self = this;
      var url = 'http://120.79.84.167:3000' + '/projects';
      self.$http.get(url)
          .then(function(response){
            if (response.status===200){
              self.getDatasList(response.data);
              self.dataProjects = response.data;
              self.forEERSort();
              self.drawParam();
            }
          })
  },

  getDatasList(data){
    let dataOrigin={};
    let tgo=[];
    let tg=[];
    let a=[];
    let n=[];
    let cop=[];
    let eer=[];
    for(let item of data){
        tgo.push(item.tgo);
        tg.push(item.tg);
        a.push(item.a);
        n.push(item.n);
        cop.push(item.cop);
        eer.push(item.eer);
    }
    dataOrigin.tgo=tgo;
    dataOrigin.tg=tg;
    dataOrigin.a=a;
    dataOrigin.n=n;
    dataOrigin.cop=cop;
    dataOrigin.eer=eer;
    this.dataOrigin=dataOrigin;
  },
  forEERSort(){
    this.dataOrigin_2 = Object.assign([],this.dataProjects); 
    this.dataOrigin_2.sort(function(a,b){
      return a.eer-b.eer;
    });
    console.log("forEERSort", this.dataOrigin_2);
  },

  changeEERsort(){
     console.log("changeEERsort", this.dataOrigin_2);
     this.dataOrigin_2 = this.dataOrigin_2.reverse();
     this.drawParam();    
  },

  bubbleSort(arr) {
    var len = arr.length;
    for (var i = 0; i < len; i++) {
        for (var j = 0; j < len - 1 - i; j++) {
            if (arr[j] > arr[j+1]) {        
                var temp = arr[j+1];        
                arr[j+1] = arr[j];
                arr[j] = temp;
            }
        }
    }
    return arr;
 },
    drawParam(){
        let myChart = this.$echarts.init(document.getElementById('myChartparam'));

        //项目数量，dataY为y坐标
        var dataY=[];
        for(var i=0;i<this.dataOrigin.tgo.length;i++){
          dataY.push(i)
        };

        //tgo,取到数据,若tag1，则排序
        let aaa = Object.assign([],this.dataOrigin.tgo);
        if(this.activeName=='first'){
            this.bubbleSort(aaa);
        };     
        //升序
        if(this.activeName=='first'&&1==this.selected0){      
          aaa.reverse();     
          };
        let dataParam0=[];
        //定位当前项目参数所在的yAxis值
        let theParam0 = aaa.indexOf(18.2);
        //判断：每列单独排序，按照EER排序
        if(this.activeName=='first'){
            for(let i=0;i<aaa.length;i++){
              dataParam0.push([0,i,aaa[i]])
            };
        }else{
            for(let i=0;i<aaa.length;i++){
              dataParam0.push([0,i,this.dataOrigin_2[i].tgo]);
            };
            theParam0 = this.dataOrigin_2[i].tgo.indexOf(18.2);
        };


        //tg,取到数据,若tag1，则排序
        let bbb = Object.assign([],this.dataOrigin.tg);
        if(this.activeName=='first'){
          this.bubbleSort(bbb);
        }; 
        //升序
        if(this.activeName=='first'&&1==this.selected1){      
          bbb.reverse();     
          };
        let dataParam1=[];
        //定位当前项目参数所在的yAxis值
        let theParam1 = bbb.indexOf(4.3);
        //判断：每列单独排序，按照EER排序
        if(this.activeName=='first'){
            for(let i=0;i<bbb.length;i++){
              dataParam1.push([0,i,bbb[i]])
            };
        }else{
            for(let i=0;i<bbb.length;i++){
              dataParam1.push([0,i,this.dataOrigin_2[i].tg]);
            };
            theParam1 = this.dataOrigin_2[i].tg.indexOf(4.3);
        };

       //n,取到数据,若tag1，则排序
        let ccc = Object.assign([],this.dataOrigin.n);
        if(this.activeName=='first'){
          this.bubbleSort(ccc);
        }; 
        //升序
        if(this.activeName=='first'&&1==this.selected2){      
          ccc.reverse();     
          };
        let dataParam2=[];
        //定位当前项目参数所在的yAxis值
        let theParam2 = ccc.indexOf(0.38);
        //判断：每列单独排序，按照EER排序
        if(this.activeName=='first'){
            for(let i=0;i<ccc.length;i++){
              dataParam2.push([0,i,ccc[i]])
            };
        }else{
            for(let i=0;i<ccc.length;i++){
              dataParam2.push([0,i,this.dataOrigin_2[i].n]);
            };
            theParam2 = this.dataOrigin_2[i].n.indexOf(0.38);
        };

        //a,取到数据,若tag1，则排序
        let ddd = Object.assign([],this.dataOrigin.a);
        if(this.activeName=='first'){
          this.bubbleSort(ccc);
        }; 
        //升序
        if(this.activeName=='first'&&1==this.selected3){      
          ddd.reverse();     
          };
        let dataParam3=[];
        //定位当前项目参数所在的yAxis值
        let theParam3 = ddd.indexOf(0.83);
        //判断：每列单独排序，按照EER排序
        if(this.activeName=='first'){
            for(let i=0;i<ddd.length;i++){
              dataParam3.push([0,i,ddd[i]])
            };
        }else{
            for(let i=0;i<ddd.length;i++){
              dataParam3.push([0,i,this.dataOrigin_2[i].a]);
            };
            theParam4 = this.dataOrigin_2[i].a.indexOf(0.83);
        };

        //cop,取到数据,若tag1，则排序
        let eee = Object.assign([],this.dataOrigin.cop);
        if(this.activeName=='first'){
          this.bubbleSort(eee);
        }; 
        //升序
        if(this.activeName=='first'&&1==this.selected4){      
          eee.reverse();     
          };
        let dataParam4=[];
        //定位当前项目参数所在的yAxis值
        let theParam4 = eee.indexOf(3.61);
        //判断：每列单独排序，按照EER排序
        if(this.activeName=='first'){
            for(let i=0;i<eee.length;i++){
              dataParam4.push([0,i,eee[i]])
            };
        }else{
            for(let i=0;i<eee.length;i++){
              dataParam4.push([0,i,this.dataOrigin_2[i].cop]);
            };
            theParam4 = this.dataOrigin_2[i].cop.indexOf(3.61);
        };

        //eer,取到数据,若tag1，则排序
        let fff = Object.assign([],this.dataOrigin.eer);
        if(this.activeName=='first'){
          this.bubbleSort(fff);
        }; 
        //升序
        if(this.activeName=='first'&&1==this.selected5){      
          fff.reverse();     
          };
        let dataParam5=[];
        //定位当前项目参数所在的yAxis值
        let theParam5 = fff.indexOf(4.09);
        //判断：每列单独排序，按照EER排序
        if(this.activeName=='first'){
            for(let i=0;i<fff.length;i++){
              dataParam5.push([0,i,fff[i]])
            };
        }else{
            for(let i=0;i<fff.length;i++){
              dataParam5.push([0,i,this.dataOrigin_2[i].eer]);
            };
            theParam5 = this.dataOrigin_2[i].eer.indexOf(4.09);
        };

       
        myChart.setOption({
         
        visualMap:{
        calculable: 'true',
        min:'0' ,
        max: '20',
        show:false
    },
    grid: [
        {left:'5%',top:'10px',width: '11%'},
        {left:'20%', top:'10px',width: '11%'},
        { left:'35%',top:'10px',width: '11%'},
        { left:'50%',top:'10px',width: '11%'},
        { left:'65%',top:'10px',width: '11%'},
        {left:'80%',top:'10px', width: '11%'},
    ],
    series: [{
        name:'Ⅰ',
        type: 'heatmap',
        xAxisIndex: 0,
        yAxisIndex: 0,
        data:dataParam0,
        markPoint: {
            symbol:'rect',
            itemStyle:{
                normal:{
                    color:'skyblue'
                }
            },
            data:[{
                name:'theProject',
                xAxis:1,
                yAxis:theParam0
            }
            ]
        },
        label: {
            normal: {
                show: true,
                position: 'insideRight'
            }
        },
        itemStyle:{
            normal:{
                color:'rgb(128,128,128)',
                borderWidth:'3',
            }
        }
    },
    {
        name:'Ⅱ',
        type: 'heatmap',
        xAxisIndex: 1,
        yAxisIndex: 1,
        data:dataParam1,
        markPoint: {
            symbol:'rect',
            itemStyle:{
                normal:{
                    color:'skyblue'
                }
            },
            data:[{
                name:'theProject',
                xAxis:1,
                yAxis:theParam1
            }
            ]
        },
        label: {
            normal: {
                show: true,
                position: 'insideRight'
            }
        },
        itemStyle:{
            normal:{
                color:'rgb(128,128,128)',
                borderWidth:'3',
            }
        }
    },
    {
        name:'Ⅲ',
        type: 'heatmap',
        xAxisIndex: 2,
        yAxisIndex: 2,
        data:dataParam2,
        markPoint: {
            symbol:'rect',
            itemStyle:{
                normal:{
                    color:'skyblue'
                }
            },
            data:[{
                name:'theProject',
                xAxis:1,
                yAxis:theParam2
            }
            ]
        },
        label: {
            normal: {
                show: true,
                position: 'insideRight'
            }
        },
        itemStyle:{
            normal:{
                color:'rgb(128,128,128)',
                borderWidth:'3',
            }
        }
    },
    {
        name:'Ⅳ',
        type: 'heatmap',
        xAxisIndex: 3,
        yAxisIndex: 3,
        data:dataParam3,
        markPoint: {
            symbol:'rect',
            itemStyle:{
                normal:{
                    color:'skyblue'
                }
            },
            data:[{
                name:'theProject',
                xAxis:1,
                yAxis:theParam3
            }
            ]
        },
        label: {
            normal: {
                show: true,
                position: 'insideRight'
            }
        },
        itemStyle:{
            normal:{
                color:'rgb(128,128,128)',
                borderWidth:'3',
            }
        }
    },
    {
        name:'Ⅴ',
        type: 'heatmap',
        xAxisIndex: 4,
        yAxisIndex: 4,
        data:dataParam4,
        markPoint: {
            symbol:'rect',
            itemStyle:{
                normal:{
                    color:'skyblue'
                }
            },
            data:[{
                name:'theProject',
                xAxis:1,
                yAxis:theParam4
            }
            ]
        },
        label: {
            normal: {
                show: true,
                position: 'insideRight'
            }
        },
        itemStyle:{
            normal:{
                color:'rgb(128,128,128)',
                borderWidth:'3',
            }
        }
    },
    {
        name:'Ⅵ',
        type: 'heatmap',
        xAxisIndex: 5,
        yAxisIndex: 5,
        data:dataParam5,
        markPoint: {
            symbol:'rect',
            itemStyle:{
                normal:{
                    color:'skyblue'
                }
            },
            data:[{
                name:'theProject',
                xAxis:1,
                yAxis:theParam5
            }
            ]
        },
        label: {
            normal: {
                show: true,
                position: 'insideRight'
            }
        },
        itemStyle:{
            normal:{
                color:'rgb(128,128,128)',
                borderWidth:'3',
            }
        }
    }],
    xAxis: [{
        gridIndex: 0,
        show:true,
        data: ['tg'],
        nameTextStyle:{
          fontSize:33,
        },
        boundaryGap: false,
        type: "category",
        axisLine:{
            show:false,
        },
        axisTick:{
            show:false
        }},
        {
        gridIndex: 1,
        show:true,
        data: ['t'],
        boundaryGap: false,
        axisLabel:{
          interval:0
        },
        type: "category",
        axisLine:{
            show:false,
        },
        axisTick:{
            show:false
        }},
        {
        gridIndex: 2,
        data: ['∆t'],
        boundaryGap: false,
        type: "category",
        axisLine:{
            show:false,
        },
        axisTick:{
            show:false
        }},
        {
        gridIndex: 3,
        data: ['α'],
        boundaryGap: false,
        type: "category",
        axisLine:{
            show:false,
        },
        axisTick:{
            show:false
        }},
        {
        gridIndex: 4,
        data: ['η'],
        boundaryGap: false,
        type: "category",
        axisLine:{
            show:false,
        },
        axisTick:{
            show:false
        }},
        {
        gridIndex: 5,
        data: ['EER'],
        boundaryGap: false,
        type: "category",
        axisLine:{
            show:false,
        },
        axisTick:{
            show:false
        }}
    ],
    yAxis: [{
        gridIndex: 0,
        show:false,
        data:dataY,
        splitArea: {
            "show":false
        },
        type: "category",
        },
        {
         gridIndex: 1,
        show:false,
        data: dataY,
        splitArea: {
            show:false
        },
        type: "category", 
        },
        {
         gridIndex: 2,
        show:false,
        data: dataY,
        splitArea: {
            show:false
        },
        type: "category", 
        },
        {
         gridIndex: 3,
        show:false,
        data:dataY,
        splitArea: {
            show:false
        },
        type: "category", 
        },
        {
         gridIndex: 4,
        show:false,
        data: dataY,
        splitArea: {
            show:false
        },
        type: "category", 
        },
        {
         gridIndex: 5,
        show:false,
        data:dataY,
        splitArea: {
            show:false
        },
        type: "category", 
        }
    ]
 
});
}}
}

</script>

<!-- Add "scoped" attribute to limit CSS to this component only -->
<style scoped>
.selectSort{
  width:100%;
  height:50px;
  padding-left:3%;
  padding-right:3%;
}
select{
  margin:0 2%;
  width:11%;
  height:30px;
  float:left;
}
#myChartparam{
  width:100%;
  height:500px;
  float:left;
}

.clear{
  clear:both
  }
.paramsList{
  width:70%;
  height:700px;
  float:left;
}
</style>

