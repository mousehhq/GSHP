<template>
    <div id="charts">
        <el-radio-group v-model="season" @change="seasonChange">
            <el-radio :label="0">供暖季</el-radio>
            <el-radio :label="1">供冷季</el-radio>
        </el-radio-group>
        <div v-if = "this.isHaveParams">
            <paramsList ref="bar" :paramsList="paramsList" :markParams="markParams" :isHaveParams="isHaveParams"></paramsList>
            <eerparam  ref="scatter" @calculateEigenValue="calculateEigenValue" @calculate="calculateEigenValue" @calculateDrawLine="calculateEigenValue" @:dataAll="dataAll" :markEER="markEER"></eerparam>
        </div>
        <div v-if="!this.isHaveParams">
            <h4>该项目暂无数据</h4>
        </div>
    </div>
</template>
<script>
    import paramsList from '../Project/ParamsList.vue'
    import eerparam from '../Project/EERparam.vue'
    import calculate from '../../../common/calculate.js'
    import bus from '../project/Bus.js'

    export default {
        data() {
            return {
                season: 0,
                projectList: [],
                paramsList: [],
                /*dataOrigin:{
                 tgo:[],
                 tg:[],
                 a:[],
                 n:[],
                 cop:[],
                 eer:[]
                 },*/
                dataAll: [],
                markParams: [],
                markEER: [],
                markProject:[],
                isActiveEer:false,
                isEerActive:false,
                isHaveParams:true

            }
        },
        props: ['isEvaluateItem'],
        components: {
            paramsList,
            eerparam
        },
         watch: {
            '$route'(to, from){
                this.getData();
            }
        },
        created() {
            bus.$on('calculateEigenValue',(isActiveEer) => {
                this.isActiveEer = isActiveEer;
                this.calculateEigenValue(this.isActiveEer);
            });
            bus.$on('calculate',(isEerActive) => {
                this.isEerActive = isEerActive;
                this.calculateEigenValue(this.isEerActive);
            });
            bus.$on('calculateDrawLine',() => {
                this.calculateEigenValue(0);
            });

            this.getData();
        },
        methods: {
            getData(){
                var self = this;

                let url = GSHP_SERVER_ENDPOINT + '/project/projectAveParams';
                self.$http.get(url, {
                    params: {
                        season: 0,
                    }
                }).then((response) => {
                    self.markProject = [];
                    if (response.status === 200) {
                        self.projectList = response.data;
                        for(let item of self.projectList ){
                            if(item.id==parseFloat(self.$route.query.id)){
                                //self.markProject.push(item);
                                self.markProject[0] = item;                                      
                            }
                            else{
                                
                            }
                        };
                        this.isHaveParams = true;
                        console.log("self.markProject[0]",self.markProject[0])
                        this.calculateEigenValue(this.isActiveEer);

                    }
                })
            },


            /*计算特征值*/
            calculateEigenValue(isActive){
                if(this.isEvaluateItem){
                    if(!this.markProject.length){
                            this.isHaveParams = false
                            return
                        }else{
                            this.isHaveParams = true
                            };
                }
                var projectList = this.projectList;
                this.paramsList = calculate.getTableData(projectList, this.season);
                
                //计算Delta EER
                this.dataAll = calculate.getDeltaEER(this.paramsList, this.season);
                 //计算当前项目参数
                 
                if (this.isEvaluateItem&&this.isHaveParams) {           
                    this.markParams = calculate.getTableData(this.markProject, this.season);
                    for(let item of this.dataAll){                      
                        if(item.id==this.markProject[this.markProject.length-1].id){
                            this.markEER[0] = item.value;
                        }
                    }
                   
                   // this.markProject = [];
                   
                }
                if(isActive){
                        this.dataAll = this.dataAll.reverse();
                        this.$refs.scatter.drawLine(this.dataAll,this.markEER);
                        return;
                    }
                if((!this.isEvaluateItem)||(this.isEvaluateItem&&this.isHaveParams)){
                    this.$refs.bar.getDatasList(this.paramsList,this.markParams);
                    this.$refs.scatter.drawLine(this.dataAll,this.markEER);
                }else{
                    return
                }

            },

            seasonChange(val){
                this.calculateEigenValue();
            },
        }
    }
</script>
<style>
    #charts .el-radio-group {
        display: block;
        margin: 30px 0 20px;
    }
</style>