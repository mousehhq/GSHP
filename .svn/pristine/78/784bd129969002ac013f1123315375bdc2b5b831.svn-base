<template>
    <div :id="field+'-'+season+'-line-chart'" class="line-chart">
    </div>
</template>
<script>
    //import echarts from '../../../../lib/echarts.min .js'
    import echarts from '../../../../lib/echarts.common.min'

    export default {
        data() {
            return {
                id: '',
                project: {},
                allDataObj: {},
                timeData: [],
                chartTitle: ''

            }
        },
        props: ['field', 'season'],
        watch: {
            '$store.state.data': {
                handler: function (newVal, oldVal) {
                    console.log('$store.state.data');
                    this.getLineData();
                },
                deep: true
            },
            '$route'(to, from){
                this.getLineData();
            }
        },

        methods: {
            getLineData(){
                this.allDataObj = JSON.parse(JSON.stringify(this.$store.state.data.allDataObj));
                this.timeData = this.allDataObj ? this.allDataObj.time : [];//进行空验证
                this.lineData = this.allDataObj ? this.allDataObj[this.field] : [];//进行空验证
                this.draw();
            },


            getSeriesItem(seriesItem, key){
                seriesItem.name = key;
                var data = [];
                this.eigenBarObj[key].forEach(function (item, index) {
                    data.push([0, index, item]);
                });
                seriesItem.data = data;


                if (this.isEvaluateItem && this.markEigen && this.markEigen[key]) {
                    var dataObj = {
                        name: key,
                        yAxis: this.eigenBarObj[key].indexOf(this.markEigen[key])
                    };
                    var markPoint = {
                        symbol: 'pin',
                        symbolSize: 20,
                        symbolOffset: [0, '50%'],

                        itemStyle: {
                            normal: {
                                color: 'skyblue'
                            }
                        },
                        data: [dataObj]
                    };
                    seriesItem.markPoint = markPoint;
                }

                return seriesItem;
            },

            setSeries(){
                var seriesItem = {
                    name: this.field,
                    type: 'line',
                    data: this.lineData
                };
                return seriesItem;
            },

            setXAxis(){
                var xAxisObj = {
                    type: 'category',
                    boundaryGap: false,
                    axisLine: {onZero: true},
                    data: this.timeData
                };
                return xAxisObj;
            },

            setYAxis(){
                var yAxisObj = {
                    type: 'value',
                    splitLine: {
                        show: false
                    }
                };
                return yAxisObj;
            },

            draw(){
                var self = this;
                //this.setY();
                this.setTitle();
                var yAxis = this.setYAxis();
                var xAxis = this.setXAxis();
                var series = this.setSeries();

                var option = {
                    title: {
                        text: this.chartTitle
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    series: series,
                    xAxis: xAxis,
                    yAxis: yAxis,
                    dataZoom: [{
                     realtime: true,
                     }],

                };

                let chartContainer = document.getElementById(this.field + '-' + this.season + '-line-chart');
                //this.resizeChart();
                this.myChart = echarts.init(chartContainer);
                this.myChart.setOption(option);
                console.dir(option);
                //window.addEventListener("resize", this.resizeHandler);
            },

            setTitle(){
                switch (this.field) {
                    case 'tgio':
                        this.chartTitle = "源侧进出口温度";
                        break;
                    case 'tuio':
                        this.chartTitle = "用侧进出口温度";
                        break;
                    case 'gu':
                        this.chartTitle = "用户侧流量";
                        break;
                    case 'gg':
                        this.chartTitle = "地源侧流量";
                        break;
                }
            },

            goBack(){
                this.$router.go(-1);
            },
        }
    }
</script>
<style>
    .line-chart {
        width: 50%;
        height: 260px;
        float: left;
        /*border: 1px solid;*/
    }
</style>